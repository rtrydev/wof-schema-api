service: wof-schema-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  deploymentBucket:
    name: rtrydev-serverless-deployments-${opt:region}
  httpApi:
    cors:
      allowedOrigins: '*'
      allowedHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
    authorizers:
      wofAuthorizer:
        type: request
        functionArn: 'arn:aws:lambda:${aws:region}:${aws:accountId}:function:wof-authorizer-dev-authorize'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:GetItem'
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/wof-schemas
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/wof-schemas/*

package:
  individually: true
  exclude:
    - '**/*'

functions:
  getSchema:
    handler: api.handlers.get_schema.handler
    layers:
      - Ref: PythonRequirementsLambdaLayer
    package:
      include:
        - 'api/handlers/get_schema.py'
        - 'application/**/*'
        - 'domain/**/*'
        - 'infrastructure/**/*'
    events:
      - httpApi:
          path: /{id}
          method: get
  createSchema:
    handler: api.handlers.create_schema.handler
    package:
      include:
        - 'api/handlers/create_schema.py'
        - 'application/**/*'
        - 'domain/**/*'
        - 'infrastructure/**/*'
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /
          method: post
          authorizer: wofAuthorizer
  updateSchema:
    handler: api.handlers.update_schema.handler
    package:
      include:
        - 'api/handlers/update_schema.py'
        - 'application/**/*'
        - 'domain/**/*'
        - 'infrastructure/**/*'
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /{id}
          method: put
          authorizer: wofAuthorizer

custom:
  pythonRequirements:
    layer: true

plugins:
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-python-requirements
